<?php

namespace ResponsabilitesBundle\Repository;

/**
 * ExtraJobRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExtraJobRepository extends \Doctrine\ORM\EntityRepository
{
	private function byYear($qb, $year)
	{
		$qb
			->where(
				$qb->expr()->between('e.date', ':date_debut', ':date_fin')
				)
			->setParameters(
				array(
					'date_debut' => new \DateTime($year.'/01/01'),
					'date_fin'   => new \DateTime(($year+1).'/01/01'),
					)
				);

		return $this;
	}

	private function bySchoolYear($qb, $firstYearOfSchoolYear)
	{
		$qb
			->where(
				$qb->expr()->between('e.date', ':date_debut', ':date_fin')
				)
			->setParameters(
				array(
					'date_debut' => new \DateTime($firstYearOfSchoolYear.'/09/01'),
					'date_fin'   => new \DateTime(($firstYearOfSchoolYear+1).'/09/01'),
					)
				);

		return $this;
	}

	/*private function joinEquipe($qb)
	{
		$qb
			->innerJoin('e.equipe', 'g')
			->addSelect('g');

		return $this;
	}*/

	public function getBySchoolYear($firstYearOfSchoolYear)
	{
		$qb = $this->createQueryBuilder('e');

		$this
			->bySchoolYear($qb, $firstYearOfSchoolYear)
			->joinEquipe($qb);

		return $qb->getQuery()->getResult();
	}

	public function getByYear($year)
	{
		$qb = $this->createQueryBuilder('e');

		$this
			->byYear($qb, $year)
			->joinEquipe($qb);

		return $qb->getQuery()->getResult();
	}

	public function getRecettesOfSchoolYear($firstYearOfSchoolYear)
	{
		$qb = $this->_em->createQueryBuilder()
			->select('e.montant')
			->from($this->_entityName, 'e');

		$this->bySchoolYear($qb, $firstYearOfSchoolYear);

		$extraJobs = $qb->getQuery()->getArrayResult();

		$recettes = 0.00;

		foreach ($extraJobs as $extraJob) {
			$recettes += $extraJob['montant'];
		}

		return $recettes;
	}

	public function getRecettesOfYear($year)
	{
		$qb = $this->_em->createQueryBuilder()
			->select('e.montant')
			->from($this->_entityName, 'e');

		$this->byYear($qb, $year);

		$extraJobs = $qb->getQuery()->getArrayResult();

		$recettes = 0.00;

		foreach ($extraJobs as $extraJob) {
			$recettes += $extraJob['montant'];
		}

		return $recettes;
	}
}
